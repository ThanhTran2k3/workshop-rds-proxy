[
{
	"uri": "//localhost:1313/vi/1.-introduction/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "1. Tổng quan Amazon RDS Proxy là một dịch vụ proxy cơ sở dữ liệu được quản lý hoàn toàn bởi AWS, dùng để tối ưu kết nối đến Amazon RDS và Amazon Aurora. Dịch vụ này giúp ứng dụng:\nTăng hiệu năng truy cập cơ sở dữ liệu. Tối ưu hóa việc tái sử dụng kết nối (connection pooling). Giảm độ trễ trong các môi trường serverless như AWS Lambda. Tăng tính sẵn sàng và khả năng phục hồi sau lỗi (failover). 2. Cách Hoạt Động RDS Proxy hoạt động như một lớp trung gian thông minh giữa ứng dụng và cơ sở dữ liệu:\nConnection Pooling: RDS Proxy giữ sẵn một nhóm kết nối đến backend Database. Khi ứng dụng yêu cầu truy cập, RDS Proxy sẽ tái sử dụng kết nối nếu có, hoặc mở mới nếu cần. RDS Proxy quản lý thời gian sống của kết nối, failover, và đóng/mở kết nối theo trạng thái hệ thống. 3. Tính năng nổi bật Tính năng Mô tả 🔁 Connection pooling Giảm số lượng kết nối Database đồng thời, tránh vượt giới hạn ⚡ Tối ưu hóa Lambda/Container Giảm độ trễ khi kết nối Database trong môi trường serverless 🔐 Tích hợp IAM \u0026amp; TLS Bảo mật mạnh mẽ với IAM, Secrets Manager và mã hóa TLS 🛡️ Tự động failover Hỗ trợ chuyển đổi Database backend tự động khi có sự cố 📊 Tích hợp giám sát Kết hợp với CloudWatch để theo dõi hiệu suất 4. Chi phí và khả năng cung cấp khu vực \u0026amp; phiên bản 💰 Chi phí Chi phí của Amazon RDS Proxy được tính dựa trên:\nSố lượng vCPU sử dụng bởi proxy Thời gian hoạt động của proxy (theo giờ) Không tính thêm phí dựa trên số lượng kết nối hay request Bạn vẫn trả chi phí thông thường cho Amazon RDS hoặc Aurora 📘 Xem bảng giá chi tiết\n5. Hạn ngạch và giới hạn cho RDS Proxy Hạng mục Mặc định Số lượng Proxy mỗi tài khoản 20 Target group mỗi Proxy 20 Database instance mỗi Proxy 1 Endpoint mỗi Proxy 1 Timeout lấy kết nối 120 giây (có thể điều chỉnh) Kết nối đồng thời hỗ trợ Hàng ngàn (auto scale) Có thể yêu cầu tăng giới hạn qua AWS Support nếu cần.\nNhững hạn chế bổ sung cho RDS dành cho MariaDB Các hạn chế khi dùng Amazon RDS Proxy với RDS for MariaDB:\nProxy chỉ lắng nghe trên cổng 3306, nhưng vẫn kết nối với Database bằng cổng được cấu hình. ❌ Không hỗ trợ MariaDB tự quản lý trên EC2. ❌ Không hoạt động nếu read_only = 1 trong Database parameter group. ❌ Không hỗ trợ chế độ nén MariaDB (--compress, -C). ❌ Không hỗ trợ plugin xác thực auth_ed25519. ❌ Không hỗ trợ TLS 1.3. ⚠️ GET DIAGNOSTICS có thể trả kết quả không chính xác nếu RDS Proxy tái sử dụng kết nối. ❌ Không hỗ trợ caching_sha2_password (qua ClientPasswordAuthType). ⚠️ Không nên dùng sql_auto_is_null = true trong truy vấn khởi tạo proxy — có thể gây lỗi ứng dụng. Những hạn chế bổ sung cho RDS dành cho Microsoft SQL Server Các hạn chế khi dùng RDS Proxy với RDS for SQL Server:\n⚠️ Số lượng Secrets trong AWS Secrets Manager có thể nhiều nếu SQL Server dùng collation phân biệt chữ hoa/thường. ❌ Không hỗ trợ kết nối sử dụng Active Directory. ❌ IAM authentication không hoạt động với client không hỗ trợ thuộc tính token. ⚠️ Các biến hệ thống như @@IDENTITY, @@ROWCOUNT, SCOPE_IDENTITY() có thể trả sai nếu không được lấy trong cùng một câu lệnh phiên. ❌ Nếu dùng MARS (Multiple Active Result Sets), proxy sẽ không thực thi truy vấn khởi tạo. ❌ Không hỗ trợ phiên bản SQL Server 2014 và SQL Server 2022. ❌ Không hỗ trợ client không xử lý được nhiều thông điệp TLS trong một bản ghi. Những hạn chế bổ sung cho RDS dành cho MySQL Các hạn chế khi dùng Amazon RDS Proxy với RDS for MySQL:\nProxy chỉ lắng nghe trên cổng 3306. ❌ Không hỗ trợ MySQL tự quản lý trên EC2. ❌ Không hoạt động nếu read_only = 1 trong Database parameter group. ❌ Không hỗ trợ chế độ nén MySQL (--compress, -C). ❌ Không hỗ trợ mật khẩu kép (dual password) của MySQL. ❌ Không hỗ trợ client không xử lý nhiều phản hồi trong một bản ghi TLS. ⚠️ GET DIAGNOSTICS có thể trả kết quả sai khi tái sử dụng kết nối. ⚠️ Một số câu lệnh như SET LOCAL có thể thay đổi trạng thái phiên mà không gây ghim. ❌ ROW_COUNT() không hoạt động đúng với truy vấn nhiều câu lệnh. ⚠️ Với driver MySQL 8.4 C, mysql_stmt_bind_named_param() có thể tạo gói lỗi nếu số lượng tham số vượt placeholder. ⚠️ caching_sha2_password yêu cầu TLS và có thể gặp vấn đề với driver Go (go-sql). ⚠️ Không nên dùng sql_auto_is_null = true trong truy vấn khởi tạo. Những hạn chế bổ sung cho RDS dành cho PostgreSQL Các hạn chế khi dùng Amazon RDS Proxy với RDS for PostgreSQL:\nProxy chỉ lắng nghe trên cổng 5432. ❌ Không hỗ trợ lệnh CancelRequest từ client (như Ctrl+C trong psql). ⚠️ Kết quả lastval có thể không chính xác — nên dùng INSERT ... RETURNING. ❌ Không hỗ trợ streaming replication. ⚠️ scram_iterations mặc định là 4096 khi client auth với proxy (PostgreSQL 16). ⚠️ Cần có database mặc định. ⚠️ Nếu dùng ALTER ROLE ... SET ROLE, cần thiết lập SET ROLE lại trong truy vấn khởi tạo để tránh lỗi ghim. ❌ Không hỗ trợ bộ lọc ghim phiên cho PostgreSQL. ✅ Lưu ý: Hạn chế có thể thay đổi theo thời gian. Nên tham khảo tài liệu chính thức Amazon RDS Proxy documentation để cập nhật.\n6. Khái niệm và thuật ngữ RDS Proxy Thuật ngữ Mô tả Proxy endpoint Địa chỉ mà ứng dụng sử dụng thay vì Database endpoint gốc Connection pool Nhóm kết nối được mở sẵn để phục vụ nhiều client Target group Nhóm các Database instances được liên kết với một Proxy IAM Role Vai trò được gán để cấp quyền truy cập Proxy từ Lambda hoặc EC2 Secrets Manager Dịch vụ lưu trữ thông tin đăng nhập Database một cách an toàn 7. Bảo mật Amazon RDS Proxy tích hợp nhiều lớp bảo mật:\nIAM Authentication: ứng dụng xác thực bằng role IAM, không cần hard-code mật khẩu. TLS Encryption: mã hóa toàn bộ đường truyền từ client → proxy → database backend. Secrets Manager: quản lý, xoay vòng và bảo vệ thông tin đăng nhập. VPC Integration: hoạt động trong mạng riêng ảo (VPC), giới hạn truy cập từ nội bộ. 8. Lưu ý RDS Proxy không thay thế database, mà là lớp trung gian tăng hiệu năng và bảo mật. Proxy phải nằm trong cùng VPC với RDS hoặc Aurora. Không hỗ trợ tất cả các phiên bản hoặc cấu hình database (Oracle, SQL Server). Hỗ trợ tốt nhất với ứng dụng sử dụng kết nối ngắn hạn, đồng thời cao như Lambda hoặc microservices. Không nên sử dụng RDS Proxy nếu ứng dụng có ít kết nối và kết nối dài hạn liên tục. 9. Tích hợp với dịch vụ AWS khác Amazon RDS Proxy hoạt động hiệu quả khi được tích hợp với các dịch vụ AWS khác:\nDịch vụ Vai trò tích hợp chính AWS Lambda Kết nối ngắn hạn, scale cao — giảm cold start và timeout khi truy cập Database Amazon ECS / EKS Hỗ trợ truy cập Database ổn định và bảo mật qua proxy từ container Amazon CloudWatch Theo dõi các chỉ số như ConnectionCount, CurrentClientConnections AWS Secrets Manager Tự động xoay vòng và bảo vệ thông tin xác thực AWS IAM Xác thực dựa trên vai trò IAM thay vì mật khẩu hard-code 10. Các chỉ số giám sát (CloudWatch Metrics) RDS Proxy cung cấp một số chỉ số CloudWatch quan trọng để giám sát và chẩn đoán hiệu năng:\nChỉ số Ý nghĩa DatabaseConnections Số lượng kết nối tới Database backend đang được sử dụng ClientConnections Số lượng client kết nối tới proxy CurrentSessionPercent % số phiên đang sử dụng trên tổng số có thể DatabaseConnectionBorrowTimeouts Số lần client không lấy được kết nối trong thời gian timeout ActiveConnections Tổng số kết nối đang được sử dụng tích cực 👉 Có thể thiết lập cảnh báo tự động dựa trên các chỉ số này bằng Amazon CloudWatch Alarms để giám sát chủ động và phản ứng kịp thời với các vấn đề hiệu năng.\n11. Các phương pháp tối ưu khi sử dụng RDS Proxy Để đạt hiệu suất tối đa và đảm bảo độ ổn định khi sử dụng Amazon RDS Proxy, bạn nên áp dụng các phương pháp sau:\n✅ Thiết kế ứng dụng sử dụng kết nối ngắn hạn: Tránh giữ kết nối database lâu một cách không cần thiết. ✅ Sử dụng IAM hoặc Secrets Manager: Tránh hard-code thông tin đăng nhập trong mã nguồn. ✅ Theo dõi thường xuyên các chỉ số CloudWatch: Để phát hiện kịp thời các vấn đề. ✅ Tối ưu các tham số cấu hình Database trong Parameter Group: như thời gian timeout kết nối, autocommit,\u0026hellip;. ✅ Cấu hình truy vấn khởi tạo (Initialization Query) một cách rõ ràng để đảm bảo mỗi kết nối được khởi động với trạng thái mong muốn. 💡 Việc thiết kế tốt các truy vấn khởi tạo và kiểm soát trạng thái kết nối giúp giảm hiện tượng ghim kết nối (pinning) và cải thiện khả năng tái sử dụng kết nối hiệu quả.\n"
},
{
	"uri": "//localhost:1313/vi/2.-preparation/1.-create-vpc--subnet/",
	"title": "Tạo VPC và Subnet",
	"tags": [],
	"description": "",
	"content": "Amazon Virtual Private Cloud (VPC) Amazon Virtual Private Cloud (Amazon VPC) cho phép bạn triển khai tài nguyên AWS trong một mạng logic biệt lập mà bạn tự định nghĩa. Nó hoạt động như một trung tâm dữ liệu ảo trong đám mây.\n✅Mục tiêu Tạo một VPC mới với sơ đồ mạng như sau:\nTên subnet CIDR Vai trò PublicSubnet1 10.0.1.0/24 Chạy ALB, NAT Gateway PrivateSubnet1 10.0.2.0/24 Chạy ECS Task, RDS, RDS Proxy 🛠️ Các bước thực hiện 1️. Truy cập AWS Management Console Truy cập AWS Management Console\nTìm và chọn dịch vụ VPC\n2️. Tạo VPC mới Vào VPC Dashboard \u0026gt; chọn Your VPCs\nNhấn Create VPC\nChọn VPC only\nNhập thông tin:\nName tag: MyApp-VPC IPv4 CIDR block: 10.0.0.0/16 Tenancy: Default Nhấn Create VPC\n📌 Giải thích:\nCIDR 10.0.0.0/16 cho phép bạn chia nhỏ thành nhiều subnet. Tenancy: Default giúp tiết kiệm chi phí và không giới hạn loại EC2 instance. 3️. Bật DNS cho VPC Vào lại Your VPCs\nChọn VPC vừa tạo \u0026gt; Actions \u0026gt; Edit VPC settings\nBật:\n✅ Enable DNS hostnames ✅ Enable DNS resolution Nhấn Save 4️. Tạo Subnet 4.1 Tạo PublicSubnet1 Vào VPC Dashboard \u0026gt; chọn Subnets Nhấn Create subnet Nhấn VPC ID \u0026gt; chọn MyApp-VPC Nhập thông tin: Subnet name: PublicSubnet1 Nhấn Availability Zone \u0026gt; chọn bất kỳ (VD: ap-southeast-1a) IPv4 subnet CIDR block: 10.0.1.0/24 Nhấn Create subnet 4.2 Tạo PrivateSubnet1 Vào VPC Dashboard \u0026gt; chọn Subnets Nhấn Create subnet Nhấn VPC ID \u0026gt; chọn MyApp-VPC Nhập thông tin: Subnet name: PrivateSubnet1 Nhấn Availability Zone \u0026gt; chọn bất kỳ (VD: ap-southeast-1b) IPv4 subnet CIDR block: 10.0.2.0/24 Nhấn Create subnet ✅ Kết quả đạt được Tạo được một VPC tên MyApp-VPC với CIDR 10.0.0.0/16 Tạo 1 subnet công khai PublicSubnet1 dùng cho ALB và NAT Gateway Tạo 1 subnet riêng tư PrivateSubnet1 dùng cho ECS, RDS, RDS Proxy "
},
{
	"uri": "//localhost:1313/vi/2.-preparation/",
	"title": "Các Bước Chuẩn Bị",
	"tags": [],
	"description": "",
	"content": "Thiết Lập Môi Trường AWS Tài liệu này hướng dẫn các bước cần thiết để thiết lập hạ tầng AWS trước khi triển khai các dịch vụ như ECS, RDS và RDS Proxy.\nNội Dung 1. Tạo VPC \u0026amp; Subnet 2. Tạo Internet Gateway \u0026amp; NAT Gateway 3. Tạo Security Groups 4. Tạo RDS Instance 5. Sử Dụng Secrets Manager 6. Gán IAM Role 1. Tạo VPC \u0026amp; Subnet Bước 1: Tạo một VPC mới với CIDR 10.0.0.0/16. Bước 2: Tạo hai subnet: PublicSubnet1: dùng cho ALB và NAT Gateway (VD: 10.0.1.0/24) PrivateSubnet1: dùng cho ECS, RDS và RDS Proxy (VD: 10.0.2.0/24) 2. Tạo Internet Gateway \u0026amp; NAT Gateway Bước 1: Tạo và gắn Internet Gateway (IGW) vào VPC. Bước 2: Tạo NAT Gateway trong PublicSubnet1, gán Elastic IP. Bước 3: Cấu hình bảng định tuyến: Subnet public → IGW để truy cập Internet trực tiếp. Subnet private → NAT Gateway để truy cập Internet gián tiếp. 3. Tạo Security Groups Bước 1: Tạo SG-ALB cho phép truy cập HTTP/HTTPS (cổng 80/443) từ Internet. Bước 2: Tạo SG-ECS cho phép ALB truy cập vào ECS (cổng 3000, 8080). Bước 3: Tạo SG-RDSProxy cho phép ECS truy cập RDS Proxy (cổng 3306, 5432). Bước 4: Tạo SG-RDS chỉ cho phép Proxy truy cập Database. 4. Tạo RDS Instance Bước 1: Chọn loại cơ sở dữ liệu (MySQL, PostgreSQL hoặc Aurora). Bước 2: Triển khai DB trong PrivateSubnet1. Bước 3: Gán Security Group SG-RDS và (tùy chọn) bật xác thực IAM. 5. Sử Dụng Secrets Manager Bước 1: Tạo secret trong AWS Secrets Manager để lưu thông tin đăng nhập DB dưới dạng JSON. Bước 2: Ghi lại ARN của secret để sử dụng trong cấu hình ECS Task. 6. Gán IAM Role Bước 1: Tạo IAM role (ví dụ: ecsTaskExecutionRole). Bước 2: Gán policy cho phép: Truy cập Secrets Manager Kết nối tới RDS Database Ghi log lên CloudWatch Hãy đảm bảo các thành phần trên được cấu hình đầy đủ trước khi tiến hành triển khai ECS và thiết lập kết nối đến RDS Proxy.\n"
},
{
	"uri": "//localhost:1313/vi/2.-preparation/2.-cretae-internet-gateway--nat-gateway/",
	"title": "Cấu hình Internet Gateway &amp; NAT Gateway",
	"tags": [],
	"description": "",
	"content": "🛠️ Các bước thực hiện 1. Tạo Internet Gateway (IGW) Vào VPC Dashboard \u0026gt; chọn Internet Gateways Nhấn Create internet gateway Nhập: Name tag: MyApp-IGW Nhấn Create internet gateway Sau khi tạo xong, chọn MyApp-IGW \u0026gt; nhấn Actions \u0026gt; Attach to VPC Chọn MyApp-VPC \u0026gt; nhấn Attach internet gateway 📌 Giải thích:\nInternet Gateway cho phép các subnet public truy cập Internet. 2. Tạo NAT Gateway Vào VPC Dashboard \u0026gt; NAT Gateways Nhấn Create NAT Gateway Nhập: Name: MyApp-NAT Nhấn Subnet: chọn PublicSubnet1 Elastic IP allocation ID: chọn Allocate Elastic IP Nhấn Create NAT Gateway 📌 Giải thích:\nNAT Gateway giúp các subnet private truy cập Internet (ví dụ: để cập nhật hệ thống, tải package). "
},
{
	"uri": "//localhost:1313/vi/3.-configuration/",
	"title": "Tạo Admin Group và Admin User",
	"tags": [],
	"description": "",
	"content": "Tạo Admin Group Đăng nhập vào Bảng điều khiển ở trang AWS Web Service page\nNhấn vào tên tài khoản ở góc trên bên phải và chọn My Security Credentials\nLưu ý: Trong trường hợp không thấy menu My Security Credentials, bạn có thể click vào biểu tượng tìm kiếm và điền IAM. Sau đó click vào dịch vụ IAM để truy cập vào giao diện quản lý dịch vụ IAM.\nỞ thanh bên trái, chọn User Groups sau đó chọn Create Group\nDưới mục Name the group, nhập tên Group (Ví dụ: AdminGroup) và cuộn chuột xuống dưới\nỞ phần Attach permissions policies, gõ AdministratorAccesss vào thanh tìm kiếm và nhấn chọn nó. Cuối cùng, chọn Create Group.\nHoàn thành tạo admin group.\nTạo Admin User Ở thanh bên trái, chọn Users sau đó chọn Add User\nNhập tên User (Ví dụ: AdminUser).\nClick AWS Management Console access. Click Programmatic Access. Click Custom password rồi gõ một password tùy ý của bạn (lưu ý: bạn phải ghi nhớ mật khẩu này cho những lần đăng nhập trong tương lai). Bỏ chọn mục User must create a new password\u0026hellip;. Click Next:Permissions. Lưu ý: Bằng cách chọn AWS Management Console access, bạn vừa cho phép IAM User được truy cập vào AWS thông qua bảng điều khiển AWS trên web. Việc bỏ mục User must create a new password\u0026hellip; cho phép người dùng khi lần đầu đăng nhập vào IAM User đó không cần phải tạo mật khẩu mới.\nClick tab Add user to group và click AdminGroup mà chúng ta tạo trước đó.\nClick Next:Tags\nTags (thẻ) là một tùy chọn không bắt buộc để tổ chức, theo dõi, hoặc điều khiển truy cập của user, thế nên bạn có thể thêm tags hoặc không. Click Next:Review.\nKiểm tra thông tin và chọn Create user\nHoàn thành tạo user. Có thể download.csv để lưu trữ Access key.\nTạo admin user thành công.\nKiểm tra thông tin chi tiết user.\nLưu ý: Sau khi tạo user, bạn sẽ thấy hiện lên hộp thoại download thông tin access key và secret key. Đây là thông tin dùng để thực hiện Programmatic access tới các tài nguyên của AWS thông qua AWS CLI và AWS SDK. Tạm thời chúng ta sẽ chưa sử dụng tới.\nĐăng nhập vào AdminUser Trở về dịch vụ IAM, và chọn Users ở thanh bên trái.\nNhấn vào tên của IAM User mà bạn vừa chọn.\nTrong mục Summary, chọn tab Security credentials. Nhìn vào dòng Summary: Console sign-in link và copy đường link bên cạnh nó. Đây là đường link bạn dùng để đăng nhập vào IAM User.\nMở một tab ẩn danh của trình duyệt bạn đang sử dụng và paste đường link ấy vào thanh tìm kiếm.\nLưu ý: Việc đăng nhập bằng tab ẩn danh cho phép bạn đăng nhập vào AWS bằng IAM User mà không cần phải log out khỏi root user trong tab chính.\nNhập đúng tên IAM User và password mà bạn đã nhập ở phần tạo IAM User ở trên. Nhấn sign in.\nChúc mừng, bạn đã truy cập thành công vào tài khoản của bạn dưới danh nghĩa của một IAM User AdminUser.\nBước tiếp theo, chúng ta sẽ chuyển sang sử dụng IAM Role để nâng cao tính bảo mật hơn cho account của bạn nhé.\nTham khảo IAM User và Đăng Nhập Trong AWS Một IAM user là một định danh được tạo trong một tài khoản AWS, có quyền được tương tác với các tài nguyên AWS. Người dùng IAM đăng nhập bằng cách sử dụng ID tài khoản hoặc tên bí danh, tên người dùng của họ và mật khẩu. Tên người dùng IAM được cấu hình bởi quản trị viên của bạn. Tên người dùng IAM có thể là tên thân thiện như \u0026ldquo;Zhang\u0026rdquo;, hoặc là địa chỉ email như \u0026ldquo;zhang@example.com\u0026rdquo;. Tên người dùng IAM không thể chứa khoảng trắng, nhưng có thể chứa chữ cái in hoa và thường, số, và các ký tự + = , . @ _ -.\nMẹo Nếu người dùng IAM của bạn đã bật xác thực đa yếu tố (MFA), bạn phải có quyền truy cập vào thiết bị xác thực. Để biết thêm chi tiết, xem Sử dụng thiết bị MFA với trang đăng nhập IAM của bạn.\nĐể đăng nhập với tư cách người dùng IAM\nMở Bảng điều khiển Quản lý AWS tại https://console.aws.amazon.com/.\nTrang đăng nhập chính hiển thị. Chọn \u0026ldquo;IAM user\u0026rdquo;, nhập ID tài khoản (12 chữ số) hoặc bí danh và chọn \u0026ldquo;Next\u0026rdquo;.\nGhi chú Bạn có thể không cần phải nhập ID tài khoản hoặc bí danh nếu bạn đã đăng nhập trước đó với tài khoản IAM bằng trình duyệt hiện tại hoặc nếu bạn đang sử dụng URL đăng nhập tài khoản của bạn.\nNhập tên người dùng IAM và mật khẩu của bạn, sau đó chọn \u0026ldquo;Sign in\u0026rdquo;.\nNếu MFA được bật cho người dùng IAM của bạn, sau đó bạn sẽ được xác thực sử dụng nó.\nSau khi xác thực, Bảng điều khiển Quản lý AWS sẽ mở trang chủ Bảng điều khiển.\nTạo khóa truy cập (access key) cho tài khoản root user trên AWS Quyền tối thiểu cần thiết Để thực hiện các bước sau, bạn cần có ít nhất các quyền IAM (Identity and Access Management) sau đây:\nBạn phải đăng nhập với tư cách là tài khoản root user của AWS, điều này không yêu cầu bất kỳ quyền IAM bổ sung nào khác. Bạn không thể thực hiện các bước này với tư cách là người dùng IAM hoặc vai trò (role).\nSử dụng địa chỉ email và mật khẩu của tài khoản AWS để đăng nhập vào Bảng điều khiển quản lý AWS (AWS Management Console) với tư cách là tài khoản root user.\nỞ góc trên bên phải của bảng điều khiển, chọn tên hoặc số tài khoản của bạn, sau đó chọn Security Credentials (Thông tin xác thực bảo mật).\nỞ phần Access keys (Khóa truy cập), chọn Create access key (Tạo khóa truy cập). Nếu tùy chọn này không khả dụng, điều đó có nghĩa bạn đã có số lượng tối đa các khóa truy cập. Bạn phải xóa một trong các khóa truy cập hiện có trước khi tạo khóa mới. Để biết thêm thông tin, xem IAM Object Quotas trong Hướng dẫn Người dùng IAM.\nTrên trang Alternatives to root user access keys (Các phương án thay thế cho khóa truy cập tài khoản root user), xem xét các khuyến nghị về bảo mật. Để tiếp tục, chọn vào ô kiểm và sau đó chọn Create access key (Tạo khóa truy cập).\nTrên trang Retrieve access key (Trang Lấy lại khóa truy cập), Access key ID của bạn sẽ được hiển thị.\nDưới mục Secret access key (Khóa truy cập bí mật), chọn Show (Hiển thị) và sau đó sao chép Access key ID và Secret key từ cửa sổ trình duyệt của bạn, sau đó dán chúng vào một nơi an toàn. Tùy chọn khác, bạn có thể chọn Download .csv file (Tải xuống tệp .csv) để tải xuống một tệp có tên là rootkey.csv chứa Access key ID và Secret key. Lưu tệp ở một nơi an toàn.\nChọn Done (Hoàn thành). Khi bạn không còn cần khóa truy cập nữa, chúng tôi khuyến nghị bạn xóa nó hoặc ít nhất là xem xét vô hiệu hóa nó để không ai có thể lạm dụng.\nLưu ý: Các bước này chỉ áp dụng cho tài khoản root user trên AWS. Đối với các người dùng IAM hoặc vai trò (role), cách tạo và quản lý khóa truy cập có thể khác nhau.\nXóa một khóa truy cập cho người dùng gốc trên AWS Quyền tối thiểu Để thực hiện các bước sau, bạn phải có ít nhất các quyền IAM (Quản lý Quyền và Danh sách quyền) sau đây:\nBạn phải đăng nhập dưới tư cách người dùng gốc của tài khoản AWS, điều này không yêu cầu bất kỳ quyền AWS Identity and Access Management (IAM) bổ sung nào. Bạn không thể thực hiện các bước này dưới tư cách người dùng IAM hoặc vai trò. Sử dụng địa chỉ email và mật khẩu của tài khoản AWS để đăng nhập vào Bảng điều khiển Quản lý AWS dưới tư cách người dùng gốc của bạn. Ở góc trên bên phải của bảng điều khiển, chọn tên hoặc số tài khoản của bạn, sau đó chọn Security Credentials (Chứng chỉ Bảo mật). Trong phần Access keys (Khóa truy cập), chọn khóa truy cập mà bạn muốn xóa, sau đó, ở mục Actions (Thao tác), chọn Delete (Xóa). Lưu ý Theo cách khác, bạn có thể Deactivate (Ngưng hoạt động) một khóa truy cập thay vì xóa nó vĩnh viễn. Điều này giúp bạn có thể tiếp tục sử dụng nó trong tương lai mà không cần thay đổi cả ID khóa lẫn khóa bí mật. Trong khi khóa bị vô hiệu hóa, mọi yêu cầu sử dụng nó trong các yêu cầu tới AWS API sẽ thất bại với lỗi \u0026ldquo;access denied\u0026rdquo; (truy cập bị từ chối).\nTrên hộp thoại Delete (Xóa \u0026lt;ID khóa truy cập\u0026gt;), chọn Deactivate (Ngưng hoạt động), nhập ID khóa truy cập để xác nhận bạn muốn xóa nó, sau đó chọn Delete (Xóa).\n"
},
{
	"uri": "//localhost:1313/vi/2.-preparation/3.create-route-tables/",
	"title": "Tạo Route Table",
	"tags": [],
	"description": "",
	"content": "🛠️ Các bước thực hiện 1. Tạo Route Table cho Public Subnet Vào VPC Dashboard \u0026gt; Route Tables\nNhấn Create route table\nNhập:\nName tag: MyApp-Public-RT Nhấn VPC: chọn MyApp-VPC Nhấn Create route table\nChọn route table vừa tạo \u0026gt; tab Routes \u0026gt; nhấn Edit routes\nNhấn Add route Destination: 0.0.0.0/0 Target: chọn Internet Gateway (MyApp-IGW) Nhấn Save changes Chọn tab Subnet associations \u0026gt; Edit subnet associations\nClick chọn PublicSubnet1 Nhấn Save associations 2. Tạo Route Table cho Private Subnet Nhấn Create route table\nNhập:\nName tag: MyApp-Private-RT Nhấn VPC: chọn MyApp-VPC Nhấn Create route table\nChọn route table vừa tạo \u0026gt; tab Routes \u0026gt; Edit routes\nNhấn Add route Destination: 0.0.0.0/0 Target: chọn NAT Gateway (MyApp-NAT) Nhấn Save changes Chọn tab Subnet associations \u0026gt; Edit subnet associations\nClick chọn các PrivateSubnet1 Nhấn Save associations "
},
{
	"uri": "//localhost:1313/vi/4-verify-new-account/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Nội dung:\nKiểm tra các thông tin Tạo case hỗ trợ với AWS Support Trong quá trình khởi tạo tài khoản AWS, ở bước xác thực thông tin số điện thoại liên lạc, đôi khi sẽ xảy ra tình trạng không nhận được tin nhắn SMS hoặc cuộc gọi từ phía AWS. Trong trường hợp đó, hãy làm theo các bước sau để hoàn thành việc xác nhận thông tin tài khoản:\nKiểm tra các thông tin Đầu tiên, hãy kiểm tra lại các thông tin tài khoản của bạn và đảm bảo chúng đã được nhập chính xác:\nBạn đã nhập thông tin số điện thoại và chọn mã vùng quốc tế chính xác để nhận cuộc gọi. Nếu bạn sử dụng điện thoại di động, kiểm tra điện thoại của bạn để chắc chắn bạn vẫn đang trong vòng phủ sóng để nhận cuộc gọi. Thông tin về phương thức thanh toán đã được nhập chính xác. Hãy chắc chắn rằng số điện thoại mà bạn cung cấp trong tài khoản AWS của bạn có thể liên lạc được.\nTạo case hỗ trợ với AWS Support Sau khi kiểm tra thông tin chính xác nhưng vẫn chưa nhận được cuộc gọi xác thực, AWS Support sẽ hỗ trợ bạn kích hoạt tài khoản một cách thủ công.\nTruy cập vào AWS Support console, chọn Create case. Chọn Account and billing support và nhập các thông tin hỗ trợ: Type: chọn Account. Category: chọn Activation. Subject: viết ngắn gọn tình trạng gặp phải của bạn (VD: Did not receive an SMS message or call for verification) Description: Cung cấp chi tiết tình trạng gặp phải và thông tin về thời gian bạn cần hỗ trợ kích hoạt tài khoản. Attachments: Đính kèm hình ảnh mô tả bước xác thực đang vướng phải. Ở mục Contact options, chọn Chat ở Contact methods. Chọn Submit. 5. Đội ngũ AWS Support sẽ liên lạc và hỗ trợ kích hoạt tài khoản của bạn.\nBạn có thể tạo yêu cầu hỗ trợ với AWS Support ngay cả khi tài khoản của bạn chưa được kích hoạt.\n"
},
{
	"uri": "//localhost:1313/vi/2.-preparation/4.-create-security-groups/",
	"title": "Tạo Security Groups",
	"tags": [],
	"description": "",
	"content": "Security Group (SG) dùng để kiểm soát lưu lượng vào và ra của các resource như EC2, ALB, ECS, RDS\u0026hellip;\n📋 Bảng cấu hình SG SG Name Inbound From Ports Ghi chú SG-ALB 0.0.0.0/0 80, 443 Truy cập HTTP/S từ Internet SG-ECS SG-ALB 8080 ALB gọi container (ECS) SG-RDSProxy SG-ECS 3306 ECS gọi tới Proxy SG-RDS SG-RDSProxy 3306 Proxy gọi DB 🛠️ Các bước thực hiện 1. Tạo SG-ALB Vào VPC Dashboard → chọn Security Groups bên trái.\nNhấn Create Security Group.\nNhập:\nSecurity group name: SG-ALB Description: Allow HTTP/HTTPS from Internet VPC: chọn VPC bạn đã tạo (MyApp-VPC) Ở phần Inbound rules, nhấn Add rule:\nType: HTTP, Port: 80, Source: 0.0.0.0/0 Type: HTTPS, Port: 443, Source: 0.0.0.0/0 Nhấn Create Security Group.\n2. Tạo SG-ECS Vào VPC Dashboard → chọn Security Groups bên trái.\nNhấn Create Security Group.\nNhập:\nSecurity group name: SG-ECS Description: Allow traffic from ALB to ECS VPC: MyApp-VPC Ở phần Inbound rules, nhấn Add rule:\nType: Custom TCP, Port: 8080, Source: SG-ALB Nhấn Create Security Group\n3. Tạo SG-RDSProxy Vào VPC Dashboard → chọn Security Groups bên trái.\nNhấn Create Security Group.\nNhập:\nSecurity group name: SG-RDSProxy Description: Allow ECS to access RDS Proxy VPC: MyApp-VPC Ở phần Inbound rules, nhấn Add rule:\nType: MYSQL/Aurora, Port: 3306, Source: SG-ECS Nhấn Create Security Group\n4. Tạo SG-RDS Vào VPC Dashboard → chọn Security Groups bên trái.\nNhấn Create Security Group.\nNhập:\nSecurity group name: SG-RDS Description: Allow RDS Proxy to access DB VPC: MyApp-VPC Ở phần Inbound rules, nhấn Add rule:\nType: MYSQL/Aurora, Port: 3306, Source: SG-RDSProxy Nhấn Create Security Group\n"
},
{
	"uri": "//localhost:1313/vi/2.-preparation/5.-create-rds-instance/",
	"title": "Tạo RDS Database",
	"tags": [],
	"description": "",
	"content": "🛠️ Bước 4: Tạo RDS Database (MySQL) 1. Mở dịch vụ RDS Truy cập AWS Console Tìm kiếm và chọn dịch vụ RDS 2. Tạo cơ sở dữ liệu MySQL Trong RDS Dashboard, chọn Create database 3. Chọn phương thức tạo database Engine options: Chọn Standard Create Engine type: Chọn MySQL Version: Chọn phiên bản phù hợp, ví dụ: MySQL 8.0.35 4. Cấu hình thông tin database Templates: Chọn Dev/Test (hoặc Production nếu cần HA) DB instance identifier: Nhập tên ví dụ: myapp-mysql-db Master username: Mặc định: admin Master password: Nhập password và xác nhận 5. Cấu hình instance DB instance class: Chọn db.t3.micro (cho free-tier hoặc nhỏ gọn) Storage: Chọn loại: General Purpose (SSD) Dung lượng: Ví dụ 20 GiB 6. Connectivity Virtual Private Cloud (VPC): Chọn VPC đã tạo: MyApp-VPC Subnet group: Chọn nhóm chứa subnet PrivateSubnet1 Public access: Chọn No (vì nằm trong subnet private) VPC security group: Chọn SG-RDS (đã tạo trước đó) 7. Cấu hình tùy chọn nâng cao Database authentication: Tick Enable IAM DB authentication (tuỳ chọn) Initial database name: Nhập tên DB nếu muốn tự tạo trước, ví dụ: myappdb 8. Tạo DB Cuối trang, nhấn Create database 9. Kiểm tra trạng thái Chờ vài phút, khi trạng thái Available, database đã sẵn sàng Nhấn vào DB để xem Endpoint, Port, sử dụng kết nối từ ECS "
},
{
	"uri": "//localhost:1313/vi/2.-preparation/6.-create-secrets-manager/",
	"title": "Tạo Secrets Manager",
	"tags": [],
	"description": "",
	"content": "🛠️ Các bước thực hiện 1️. Truy cập AWS Management Console Truy cập AWS Management Console\nTìm và chọn dịch vụ Secrets Manager\nNhấn chọn Store a new secret\n2. Chọn loại secret Tại bước Choose secret type: Chọn Credentials for RDS database Nhập thông tin đăng nhập cho database: Username: admin Password: your-password ✅ Hoặc chọn Other type of secrets và nhập thủ công dữ liệu JSON:\n{ \u0026#34;username\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;your-password\u0026#34; } 3. Chọn loại secret "
},
{
	"uri": "//localhost:1313/vi/2.-preparation/7.-create-iam-role-for-ecs-task/",
	"title": "Tạo IAM Role cho ECS Task",
	"tags": [],
	"description": "",
	"content": "🛠️ Các bước thực hiện 1. Tạo Policy Tìm và chọn dịch vụ IAM\nVào Identity and Access Management (IAM) \u0026gt; chọn Policies\nNhấn Create policy.\nỞ bước Specify permissions\nChuyển sang tab JSON và dán nội dung sau: { \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;secretsmanager:GetSecretValue\u0026#34;, \u0026#34;rds-db:connect\u0026#34;, \u0026#34;logs:CreateLogStream\u0026#34;, \u0026#34;logs:PutLogEvents\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; } ] } Nhấn Next để tiếp tục Ở bước Review and create\nNhập thông tin: Policy name: ecsTaskRDSAccessPolicy Nhấn Create policy\n2. Tạo Role Vào Identity and Access Management (IAM) \u0026gt; chọn Roles\nNhấn Create role.\nỞ bước Select trusted entity\nClick chọn AWS service Ở phần Use case Service or use case: chọn Elastic Container Service Use case: chọn Elastic Container Service Task Nhấn Next để tiếp tục. Ở bước Add permissions\nTìm kiếm ecsTaskRDSAccessPolicy \u0026gt; click chọn Nhấn Next để tiếp tục. Ở bước Name, review, and create\nNhập thông tin: Role name: ecsTaskExecutionRole Description: Secrets Manager and RDS Proxy access permissions for ECS Task Nhấn Create role\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Amazon RDS Proxy",
	"tags": [],
	"description": "",
	"content": "Amazon Relational Database Service Proxy (Amazon RDS Proxy) Tổng quan về Amazon RDS Proxy Amazon Relational Database Service Proxy (Amazon RDS Proxy) là một dịch vụ proxy cơ sở dữ liệu được quản lý hoàn toàn dành cho Amazon RDS, giúp cải thiện hiệu năng, tăng tính sẵn sàng và khả năng mở rộng cho các ứng dụng sử dụng Amazon RDS hoặc Aurora.\nRDS Proxy Là Gì? RDS Proxy đóng vai trò như một lớp trung gian giữa ứng dụng và Amazon RDS hoặc Aurora. RDS Proxy quản lý connection pooling giảm tải kết nối đến cơ sở dữ liệu và tái sử dụng các kết nối hiện có giúp tối ưu hóa tài nguyên và cải thiện hiệu suất ứng dụng.\nLợi Ích Chính Tính năng Lợi ích mang lại Connection Pooling Giảm số kết nối mới và tiết kiệm tài nguyên Tự động failover Tăng tính sẵn sàng cho ứng dụng Tối ưu cho Lambda/Container Giảm chi phí và độ trễ kết nối trong serverless Bảo mật cao Hỗ trợ IAM, TLS và Secrets Manager Giảm lỗi \u0026ldquo;too many connections\u0026rdquo; Hạn chế vượt giới hạn kết nối Database Tích Hợp Bảo Mật RDS Proxy hỗ trợ:\nIAM authentication: không cần lưu username/password trong ứng dụng TLS encryption: mã hóa kết nối end-to-end từ ứng dụng đến database Secrets Manager: lưu trữ và xoay vòng thông tin đăng nhập an toàn Tình Huống Sử Dụng Phù Hợp Ứng dụng serverless (AWS Lambda) cần kết nối nhanh Microservices có nhiều phiên bản cùng truy cập DB Giảm chi phí và độ trễ khi kết nối Database nhiều lần Hệ thống yêu cầu tự động phục hồi khi failover Cách Hoạt Động Ứng dụng kết nối đến RDS Proxy endpoint thay vì RDS endpoint RDS Proxy kiểm tra connection pool, nếu có sẵn tái sử dụng kết nối Nếu không có, RDS Proxy mở kết nối mới đến RDS endpoint Quản lý lifecycle kết nối và failover tự động Lưu ý RDS Proxy không thay thế RDS hay Aurora mà nó chỉ là lớp kết nối trung gian. Bạn cần bật IAM role cho Lambda/EC2 để kết nối đến proxy. Sử dụng cùng với Multi-AZ RDS để tăng độ sẵn sàng cho trường hợp fallover. RDS Proxy phải nằm trong cùng một VPC với RDS. Nếu bạn đang xây dựng một hệ thống cần tính sẵn sàng cao và hiệu năng tốt khi truy cập database thì RDS Proxy là dịch vụ nên cân nhắc.\n"
},
{
	"uri": "//localhost:1313/vi/categories/aws-services/",
	"title": "AWS Services",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/categories/database-optimization/",
	"title": "Database Optimization",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]